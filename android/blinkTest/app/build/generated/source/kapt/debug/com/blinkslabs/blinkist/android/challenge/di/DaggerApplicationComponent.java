// Generated by Dagger (https://dagger.dev).
package com.blinkslabs.blinkist.android.challenge.di;

import android.content.Context;
import com.blinkslabs.blinkist.android.challenge.data.BooksService;
import com.blinkslabs.blinkist.android.challenge.data.api.MockBooksApi;
import com.blinkslabs.blinkist.android.challenge.ui.BooksActivity;
import com.blinkslabs.blinkist.android.challenge.ui.BooksActivity_MembersInjector;
import com.blinkslabs.blinkist.android.challenge.ui.BooksViewModelFactory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerApplicationComponent implements ApplicationComponent {
  private DaggerApplicationComponent(Context applicationContext) {

  }

  public static ApplicationComponent.Factory factory() {
    return new Factory();
  }

  private BooksService booksService() {
    return new BooksService(new MockBooksApi());
  }

  private BooksViewModelFactory booksViewModelFactory() {
    return new BooksViewModelFactory(booksService());
  }

  @Override
  public void inject(BooksActivity activity) {
    injectBooksActivity(activity);
  }

  private BooksActivity injectBooksActivity(BooksActivity instance) {
    BooksActivity_MembersInjector.injectBooksViewModelFactory(instance, booksViewModelFactory());
    return instance;
  }

  private static final class Factory implements ApplicationComponent.Factory {
    @Override
    public ApplicationComponent create(Context applicationContext) {
      Preconditions.checkNotNull(applicationContext);
      return new DaggerApplicationComponent(applicationContext);
    }
  }
}
